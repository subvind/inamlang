Write a javascript method named parseAssignment that does the following...

For example, when you provide the following list of block statements in a string format:
```
H number: float = 3.14 I
H variable: float = number IU
H zero: integer = number IU
H one: integer = 1 S
H demo: string = hello world S
H fact: boolean = true I
H fiction: boolean = false S
H false: array = [1, 2, 3] S
H false: array[integer] = false S
```

It will output valid rustlang code for example:
```
let number: f64 = 3.14;
let mut variable: f64 = number;
let mut zero: i32 = number;
const one: i32 = 1;
const demo: str = "hello world";
let fact: bool = true;
const fiction: bool = false;
let array: [i32; 3] = [1, 2, 3];
let boxed_array: Box<[i32]> = Box::new([1, 2, 3]);
```

make sure to be able to handle float, integer, string, boolean, array, and array[] data types.

data types should be dynamic and the user should be able to enter whatever they want.